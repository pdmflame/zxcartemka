#coded by DEM =]
from telethon.sync import TelegramClient, events
from telethon import TelegramClient, sync
from telethon import events, utils
from telethon.tl.functions.messages import GetDialogsRequest
from telethon.tl.functions.messages import SendMessageRequest
from telethon.tl.functions.channels import JoinChannelRequest
from telethon.tl.types import InputPeerEmpty, PeerUser, PeerChat, PeerChannel
from telethon.errors import FloodWaitError
from telethon.errors import SessionPasswordNeededError
from telethon.tl.functions.channels import InviteToChannelRequest
import datetime
import requests
import time
import random
import tracemalloc
import asyncio
import concurrent.futures
import json
import tracemalloc


api_id001 = '23300404'
api_hash001 = 'f9f4667004c946e4cccc9e50ba0b39b0'
phone001 = '+6285817931151'

cloud_password1 = '12s1290rp'

# Создание клиентов 
client001 = TelegramClient('session001', api_id001, api_hash001)

# Авторизация
clients = [client001]

client001.connect()
if not client001.is_user_authorized():
    client001.send_code_request(phone001)
    try:
        client001.sign_in(phone001, input('Session-001 Введите код подтверждения: '), password=cloud_password1)
    except SessionPasswordNeededError:
        client001.sign_in(password=cloud_password1)

# Создаем список для хранения ссылок на каналы
channel_links = []

clients_added = False
for client in clients:
    client.start()
    tracemalloc.start()
    try:
        client(JoinChannelRequest('@farmtgpremov_zxc'))
        clients_added = True
    except Exception as e:
        print(f'Ошибка при присоединении клиента к группе @farmtgpremov_zxc: {e}')
if clients_added:
    print("клиенты запущены, в группу добавлены")
else:
    print("клиенты запущены, группа подготовлена")
# Функция для подписки на каналы
async def join_channel(client, link):
    await client(JoinChannelRequest(link))
    print(f'Присоединился к каналу: {link}')
# Функция-обработчик новых сообщений в группе
async def handle_group_message(event):
    message_text = event.message.message.lower()
    if message_text.startswith('join'):
        link = message_text.split(' ')[1]
        channel_links.append(link)
        print(f'Добавлена ссылка на канал: {link}')
        for client in clients:
            await join_channel(client, link)
            time.sleep(3)
# Запускаем клиентов и подписываемся на события новых сообщений в группе
for client in clients:
    client.add_event_handler(handle_group_message, events.NewMessage(chats='@farmtgpremov_zxc'))
    client.run_until_disconnected()
